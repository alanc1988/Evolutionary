pt(-Beta1/SB1,7)
library(mtcars)
mtcars
data <- mtcars
View(data)
lm(data$mpg~data$wt)
lm(data$mpg~data$wt)$Coefficients
lm(data$mpg~data$wt)$Coefficients
lm(data$mpg~data$wt)[2]
model <- lm(data$mpg~data$wt)
model$coefficients
model$coefficients[1]
Beta0 <- model$coefficients[1]
Beta1 <- model$coefficients[2]
mean(data$wt)
xbar <- mean(data$wt)
model[2]
sigma <- sqrt(sum(model$residuals^2)/(length(model$residuals)-2))
xbar <- mean(data$wt)
c(-1,1)*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
-1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)+Beta1
(1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)+Beta1)*xbar+Beta0
(-1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)+Beta1)*xbar+Beta0
(1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)+Beta1)*xbar+Beta0
ssx <- sum((xbar-data$wt)^2)
qt(.975,length(model$residuals)-2,lower.tail=FALSE)
xbar*Beta1+Beta0
xbar*Beta1+Beta0-qt(.975,length(model$residuals)-2,lower.tail=FALSE)*sigma
xbar*Beta1+Beta0+qt(.975,length(model$residuals)-2,lower.tail=FALSE)*sigma
?mtcars
sigmaBeta0 <- sqrt(((1/length(data$wt))+(xbar^2/ssx^2))*sigma^2)
sigmaBeta1 <- sigma^2/sqrt(ssx)
sigmaBeta1 <- sigma/sqrt(ssx)
sigmaBeta1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
Beta1+sigmaBeta1*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
sigmaBeta0*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
(Beta1+sigmaBeta1*qt(.975,length(model$residuals)-2,lower.tail=FALSE))*xbar
Beta0+sigmaBeta0*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
(Beta1+sigmaBeta1*qt(.975,length(model$residuals)-2,lower.tail=FALSE))*xbar+Beta0+sigmaBeta0*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
Beta1*xbar+Beta0
sigmaBeta0
sigmaBeta0*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
Beta1*xbar+Beta0
Beta1*xbar+Beta0 +sigmaBeta0*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
x <- 3
x <- 3000
x <- 3
Beta1*3+Beta0 +sqrt((1+(1/length(data$wt))+(xbar^2/ssx^2))*sigma^2)*qt(.975,length(model$residuals)-2,lower.tail=FALSE)
Beta1*3+Beta0 +sqrt((1+(1/length(data$wt))+(xbar^2/ssx^2))*sigma^2)*qt(.025,length(model$residuals)-2,lower.tail=FALSE)
intercept <- Beta0 +sqrt((1+(1/length(data$wt))+(xbar^2/ssx^2))*sigma^2)*qt(.025,length(model$residuals)-2,lower.tail=FALSE)
sigmaBeta0C <- sqrt(((1/length(data$wt))+(xbar^2/ssx^2))*sigma^2)
sigmaBeta1C <- sigma/sqrt(ssx)
t <- qt(.975,length(model$residuals)-2,lower.tail=FALSE)
(Beta0+sigmaBeta0C*t)
(Beta1+sigmaBet1c*t)
(Beta1+sigmaBeta1c*t)
sigmaBeta1C <- sigma/sqrt(ssx)
sigmaBeta0C <- sqrt(((1/length(data$wt))+(xbar^2/ssx^2))*sigma^2)
(Beta1+sigmaBeta1c*t)
(Beta1+sigmaBeta1C*t)
(Beta1+sigmaBeta1C*t)*xbar
(Beta1+sigmaBeta1C*t)*xbar+(Beta0+sigmaBeta0C*t)
sigmaBeta1C
sigmaBeta1C*t
sigmaBeta1C*t+Beta1
model2 <- lm(data$mpg~data$wt-1)
lm(data$mpg~data$wt-1)
sum(model$residuals^2)/sum(model2$residuals^2)
model2 <- lm(data$mpg~data$wt-1)
sum(model$residuals^2)/sum(model2$residuals^2)
sum(model2$residuals^2)
sum(model$residuals^2)
sum(model2$residuals)
sum(model$residuals)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
xMean <- mean(x)
Beta1 <- cor(y,x)*sd(y)/sd(x)
Beta0 <- mean(y)-mean(x)*Beta1
e <- y-Beta0-Beta1*x
sigma <- sqrt(sum(e^2)/(length(e)-2))
ssx <- sum((xMean-x)^2)
SB1 <- sigma/sqrt(ssx)
pt(-Beta1/SB1,7)
url <- "http://real-chart.finance.yahoo.com/table.csv?s=%5EVIX&d=7&e=8&f=2014&g=d&a=0&b=2&c=1990&ignore=.csv"
VIX <- read.csv(url,colClasses=c('Date'='Date'))
View(VIX)
mean(VIX$Close)
median(VIX$Close)
View(VIX)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
x*w
mean(x*w)
sum(x*w)
x <- c(0.18,0.18, -1.54, 0.42,0.42,0.42, 0.95)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-)
?lm
lm(y~x+0)
data(mtcars)
data(mtcars)
data <- data(mtcars)
data <- data(mtcars)
View(mtcars)
lm(mpg~wt)
lm(mtcars$mpg~mtcars$wt)
.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
getDate()
?date
date()
d <- date
d <- date()
strsplit(d, split=" ")
unlist(strsplit(d, split=" "))
d <- date()
unlist(strsplit(d, split=" "))
date <- unlist(strsplit(d, split=" "))
date <- unlist(strsplit(date(), split=" "))
date <- unlist(strsplit(date(), split=" "))
day <- date[3]
year <- date[6]
year <- date[5]
day <- as.integer(date[3])
year <- as.integer(date[5])
month <- date[2]
if(month=="Aug")
month <- 8
else if(month=="Sept")
month <- 9
if(month=="Aug"){
month <- 8
}else if(month=="Sept")
month <- 9
url <- paste('http://www.quandl.com/api/v1/datasets/CHRIS/CME_ES1.csv?&trim_start=1997-09-09&trim_end=',year,'-',month,'-',day,'&sort_order=desc',sep="")
Data <- data.table(read.csv(url, colClasses=c('Date'='Date')))
library(data.table)
Data <- data.table(read.csv(url, colClasses=c('Date'='Date')))
View(Data)
install.packages(writeXLS)
install.packages(WriteXLS)
install.packages('WriteXLS')
install.packages("WriteXLS")
library(WriteXLS)
?WriteXLS
?ReadXLS
timeFrame <- 10
tVix <- getPercentMoveVIX(timeFrame)
runUp <- 5
i <- which(tVix>runUp)
AKDirectory <- "/Users/Robert/Desktop/Analytical Kinetics"
library(data.table)
library(WriteXLS)
library(gdata)
source(paste(AKDirectory,"/VIX_Stats.R",sep=""))
source(paste(AKDirectory,"/importData.R",sep=""))
VIX <- getData(mode=2)
test <- getPercentMoveVIX(4)
timeFrame <- 10
tVix <- getPercentMoveVIX(timeFrame)
runUp <- 5
i <- which(tVix>runUp)
delay =5
day <- length(i)-1
lastCross = i[length(i)]
delay <- 5
bucketsI <- c(lastCross)
for(day in (length(i)-1):1)
{
if(i[day]<(lastCross-delay))
{
lastCross <- i[day]
bucketsI <- c(lastCross,buckets)
}
}
for(day in (length(i)-1):1)
{
if(i[day]<(lastCross-delay))
{
lastCross <- i[day]
bucketsI <- c(lastCross,bucketsI)
}
}
for(day in (length(i)-1):1)
{
if(i[day]<(lastCross-timeFrame))
{
lastCross <- i[day]
bucketsI <- c(lastCross,bucketsI)
}
}
day <- length(i)-1
bucketsI <- c(lastCross)
for(day in (length(i)-1):1)
{
if(i[day]<(lastCross-timeFrame))
{
lastCross <- i[day]
bucketsI <- c(lastCross,bucketsI)
}
}
lastCross = i[length(i)]
day <- length(i)-1
bucketsI <- c(lastCross)
for(day in (length(i)-1):1)
{
if(i[day]<(lastCross-timeFrame))
{
lastCross <- i[day]
bucketsI <- c(lastCross,bucketsI)
}
}
Names <- c("Citi","GE","American Intl Group","BOA","HSBC","Exxon","Dutch Shell","BP","ING","Toyota")
x1 <- c(108.28,152.36,95.04,65.45,62.97,263.99,265.19,285.06,92.01,165.68)
x2 <- c(17.05,16.59,10.91,14.14,9.52,25.33,18.54,15.73,8.10,11.13)
x3 <- c(1484.1,750.33,766.42,1110.46,1031.29,195.26,193.83,191.11,1175.16,211.15)
?matrix
matrix(x1,x2,x3,dimnames=(Names,c("X1","X2","X3")))
matrix(x1,x2,x3,dimnames=c(Names,c("X1","X2","X3")))
matrix(x1,x2,x3,dimnames=list(Names,c("X1","X2","X3")))
matrix(x1,x2,x3,dimnames=c(Names)
matrix(x1,x2,x3,dimnames=c(Names))
matrix(c(x1,x2,x3),nrow=10,dimnames=c(Names))
matrix(c(x1,x2,x3),nrow=10,dimnames=list(Names))
matrix(c(x1,x2,x3),nrow=10,dimnames=list(Names,c("X1","X2","X3")))
s11 <- sum(x1-x1bar)
x1bar <- mean(x1)
x2bar <- mean(x2)
s11 <- 1/length(x1)*sum(x1-x1bar)*sum(x1-x1bar)
c(x1bar,x2bar,s11,s22,s12,r)
x1bar <- mean(x1)
x2bar <- mean(x2)
s11 <- 1/length(x1)*sum(x1-x1bar)*sum(x1-x1bar)
s22 <- 1/length(x2)*sum(x2-x2bar)*sum(x2-x2bar)
s12 <- 1/length(x2)*sum(x1-x1bar)*sum(x2-x2bar)
r <- cor(x1,x2)
x1bar <- mean(x1)
x2bar <- mean(x2)
x3bar <- mean(x3)
s11 <- 1/length(x1)*sum(x1-x1bar)*sum(x1-x1bar)
s22 <- 1/length(x2)*sum(x2-x2bar)*sum(x2-x2bar)
s12 <- 1/length(x2)*sum(x1-x1bar)*sum(x2-x2bar)
s31 <- 1/length(x1)*sum(x3-x3bar)*sum(x1-x1bar)
s32 <- 1/length(x1)*sum(x3-x3bar)*sum(x2-x2bar)
s33 <- 1/length(x1)*sum(x3-x3bar)*sum(x3-x3bar)
r12 <- cor(x1,x2)
r11 <- 1
r22 <- 1
r33 <- 1
r31 <- cor(x1,x3)
r32 <- cor(x2,x3)
Sn <- matrix(c(s11,s12,s31,s12,s22,s32,s31,s32,s33))
R <- matrix(c(r11,r12,r31,r12,r22,r32,r31,r23,r33))
R <- matrix(c(r11,r12,r31,r12,r22,r32,r31,r32,r33))
Sn <- matrix(c(s11,s12,s31,s12,s22,s32,s31,s32,s33),nols=3)
Sn <- matrix(c(s11,s12,s31,s12,s22,s32,s31,s32,s33),ncol=3)
R <- matrix(c(r11,r12,r31,r12,r22,r32,r31,r32,r33),ncol=3)
85/(85+15)
library(data.table)
library(WriteXLS)
library(gdata)
#
#         IMPORTANT | IMPORTANT
#         IMPORTANT | IMPORTANT
#         IMPORTANT v IMPORTANT       Need to put your own directory path
#
AKDirectory <- "/Users/Robert/Desktop/Analytical Kinetics"
#
#         IMPORTANT ^ IMPORTANT       Need to put your own directory path
#         IMPORTANT | IMPORTANT
#         IMPORTANT | IMPORTANT
setwd(AKDirectory)
source(paste(AKDirectory,"/importData.R",sep=""))
source(paste(AKDirectory,"/AK_Stats.R",sep=""))
source(paste(AKDirectory,"/getStats1.R",sep=""))
source(paste(AKDirectory,"/getStats2.R",sep=""))
source(paste(AKDirectory,"/Optimizer.R",sep=""))
source(paste(AKDirectory,"/getRelationships.R",sep=""))
source(paste(AKDirectory,"/VIX_Stats.R",sep=""))
VIX <- getData(mode=2)
timeFrame <- 10
tVix <- getPercentMoveVIX(timeFrame)
runUp <- 5
i <- which(tVix>runUp)
lastCross = i[length(i)]
day <- length(i)-1
runUp <- 5
i <- which(tVix>runUp)
lastCross = i[length(i)]
dayI <- length(i)-1
bucketsI <- c(lastCross)
for(dayI in (length(i)-1):1)
{
if(i[dayI]<(lastCross-timeFrame))
{
lastCross <- i[dayI]
bucketsI <- c(lastCross,bucketsI)
}
}
drop <- 5
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:20)
{
temp <- day+i2
if(1DayPMMoveVix <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
1DayPMMoveVix <- getPercentMoveVix(1)
1DayPMMoveVix <- getPercentMoveVix(1)
x1DayPMMoveVix <- getPercentMoveVix(1)
x1DayPMMoveVix <- getPercentMoveVIX(1)
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:20)
{
temp <- day+i2
if(x1DayPMMoveVix <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
warnings()
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:20)
{
temp <- day+i2
if(x1DayPMMoveVix[temp] <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
hits <- c()
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:20)
{
temp <- day+i2
if(x1DayPMMoveVix[temp] <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
mean <- mean(hits)
median <- median(hits)
sd <- sd(hits)
n <- length(hits)
min <- min(hits)
max <- max(hits)
output <- rbind(mean,median,sd,n,min,max)
output
n <- length(bucketsI)
output <- rbind(mean,median,sd,x,n,min,max)
output <- rbind(mean,median,sd,x,n,min,max)
mean <- mean(hits)
median <- median(hits)
sd <- sd(hits)
x <- length(hits)
n <- length(bucketsI)
min <- min(hits)
max <- max(hits)
output <- rbind(mean,median,sd,x,n,min,max)
output
timeToPercentDrop <- function(timeFrame,runUp,drop,)
{
x1DayPMMoveVix <- getPercentMoveVIX(1)
tVix <- getPercentMoveVIX(timeFrame)
i <- which(tVix>runUp)
lastCross = i[length(i)]
dayI <- length(i)-1
bucketsI <- c(lastCross)
for(dayI in (length(i)-1):1)
{
if(i[dayI]<(lastCross-timeFrame))
{
lastCross <- i[dayI]
bucketsI <- c(lastCross,bucketsI)
}
}
hits <- c()
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:20)
{
temp <- day+i2
if(x1DayPMMoveVix[temp] <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
mean <- mean(hits)
median <- median(hits)
sd <- sd(hits)
x <- length(hits)
n <- length(bucketsI)
min <- min(hits)
max <- max(hits)
output <- rbind(mean,median,sd,x,n,min,max)
round(output,3)
}
timeToPercentDrop <- function(timeFrame,runUp,drop)
{
x1DayPMMoveVix <- getPercentMoveVIX(1)
tVix <- getPercentMoveVIX(timeFrame)
i <- which(tVix>runUp)
lastCross = i[length(i)]
dayI <- length(i)-1
bucketsI <- c(lastCross)
for(dayI in (length(i)-1):1)
{
if(i[dayI]<(lastCross-timeFrame))
{
lastCross <- i[dayI]
bucketsI <- c(lastCross,bucketsI)
}
}
hits <- c()
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:20)
{
temp <- day+i2
if(x1DayPMMoveVix[temp] <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
mean <- mean(hits)
median <- median(hits)
sd <- sd(hits)
x <- length(hits)
n <- length(bucketsI)
min <- min(hits)
max <- max(hits)
output <- rbind(mean,median,sd,x,n,min,max)
round(output,3)
}
timeToPercentDrop(10,5,10)
timeToPercentDrop <- function(timeFrame,runUp,drop,timeFrame2)
{
x1DayPMMoveVix <- getPercentMoveVIX(1)
tVix <- getPercentMoveVIX(timeFrame)
i <- which(tVix>runUp)
lastCross = i[length(i)]
dayI <- length(i)-1
bucketsI <- c(lastCross)
for(dayI in (length(i)-1):1)
{
if(i[dayI]<(lastCross-timeFrame))
{
lastCross <- i[dayI]
bucketsI <- c(lastCross,bucketsI)
}
}
hits <- c()
for(i in length(bucketsI):1)
{
day <- bucketsI[i]
for(i2 in 1:timeFrame2)
{
temp <- day+i2
if(x1DayPMMoveVix[temp] <= -1*drop)
{
hits<- c(hits,i2)
break
}
}
}
mean <- mean(hits)
median <- median(hits)
sd <- sd(hits)
x <- length(hits)
n <- length(bucketsI)
min <- min(hits)
max <- max(hits)
output <- rbind(mean,median,sd,x,n,min,max)
round(output,3)
}
timeToPercentDrop(10,5,10,40)
